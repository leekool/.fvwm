#   .----------------.  .----------------.  .----------------.
#  | .--------------. || .--------------. || .--------------. |
#  | |   _____      | || |  _________   | || |  _________   | |
#  | |  |_   _|     | || | |_   ___  |  | || | |_   ___  |  | |
#  | |    | |       | || |   | |_  \_|  | || |   | |_  \_|  | |
#  | |    | |   _   | || |   |  _|  _   | || |   |  _|  _   | |
#  | |   _| |__/ |  | || |  _| |___/ |  | || |  _| |___/ |  | |
#  | |  |________|  | || | |_________|  | || | |_________|  | |
#  | |              | || |              | || |              | |
#  | '--------------' || '--------------' || '--------------' |
#   '----------------'  '----------------'  '----------------'
#
#  This config file is organized as follows:
#
#    1: Functions
#    2: Styles
#    3: Colorsets
#    4: Menus
#    5: Bindings
#    6: Decor
#    7: Modules
#
#################################

# InfoStoreAdd can be used to store variable data internal to fvwm.
# The variable can then be used in the configuration as $[infostore.name].
#
# You can also use environment variables but for data internal to fvwm
# use InfoStore variables instead.
#
# The following is used in various menus and also sets the terminal
# that FvwmConsole uses. Change this to your terminal of choice
InfoStoreAdd terminal alacritty

###########
# 1: Functions
#
# Fvwm can use custom functions for various tasks.
# The syntax for defining a function named FunctionName is:
#
#   DestroyFunc FunctionName
#   AddToFunc FunctionName
#   + I [Action to do Immediately]
#   + C [Action to do on a Mouse Click]
#   + D [Action to do on a Mouse Double Click]
#   + H [Action to do on a Mouse Hold]
#   + M [Action to do on a Mouse Motion]
###########

##########
# environment variables
SetEnv fvwm_webbrowser /usr/bin/brave
SetEnv fvwm_term /usr/bin/alacritty
SetEnv fvwm_wallpaper $[FVWM_USERDIR]/wallpaper
SetEnv fvwm_icon $[FVWM_USERDIR]/icons
ImagePath $[fvwm_icon]:$[fvwm_icon];.png:$[fvwm_wallpaper]:+

# Start Function
#
# The start function is run right after fvwm is done reading
# the config file. This function run after each restart
# so using Test (Init) or Test (Restart) can further control
# actions that are run during the first time run (Init) or
# actions that are run after a restart.
DestroyFunc StartFunction
AddToFunc   StartFunction
+ I Module FvwmButtons
+ I Module FvwmEvent EventNewDesk
+ I Module FvwmPager *
+ I IconManStart

DestroyFunc InitFunction
AddToFunc InitFunction
+ I Exec xrandr --output eDP1 --primary --mode 1920x1200 --pos 0x240 --rotate normal
+ I Exec xrandr --output DP3 --mode 2560x1440 --pos 1920x0 --rotate normal
#+ I Exec feh --no-fehbg --bg-scale '$[fvwm_wallpapers]/848a81.png'
+ I Exec exec fvwm-root -r .fvwm/wallpaper/848a81.png
+ I Exec exec picom --vsync -b --config ~/.config/picom/picom.conf
+ I Exec exec alacritty

# Mouse Bindings Functions
DestroyFunc RaiseMoveX
AddToFunc RaiseMoveX
+ I Raise
+ M $0
+ D $1

DestroyFunc RaiseMove
AddToFunc RaiseMove
+ I Raise
+ M $0

DestroyFunc MoveToCurrent
AddToFunc MoveToCurrent
+ I ThisWindow MoveToPage
+ I ThisWindow MoveToDesk

# function to make sure FvonIconMan properly loads on boot
DestroyFunc IconManStart
AddToFunc   IconManStart
+ I PipeRead 'xv -root -maxpect -quit $0; sleep 1; echo Refresh'
+ I Module FvwmIconMan

# Function: SetBG $0
#
# SetBG is used with the background menu to set the background
# image and configure it to be loaded the next time fvwm is run.
# Note, fvwm-root can't use .jpeg or resize images. Use something
# like display, feh, etc.
DestroyFunc SetBG
AddToFunc   SetBG
+ I Test (f $[FVWM_USERDIR]/$0) \
    Exec exec feh --no-fehbg --bg-scale $[FVWM_USERDIR]/$0
+ I TestRc (Match) Exec exec ln -fs $0 \
    $[FVWM_USERDIR]/wallpaper
+ I TestRc (Match) Break
+ I Test (!f $[FVWM_DATADIR]/default-config/images/background/$0) Break
+ I Exec exec fvwm-root $[FVWM_DATADIR]/default-config/images/background/$0
+ I Exec exec ln -fs $[FVWM_DATADIR]/default-config/images/background/$0 \
    $[FVWM_USERDIR]/.wallpaper

# Function: IconManClick
#
# This function is run from FvwmIconMan when the button is clicked.
DestroyFunc IconManClick
AddToFunc   IconManClick
+ I ThisWindow (Raised, !Shaded, !Iconic, CurrentPage, Focused) Iconify
+ I TestRc (Match) Break
+ I ThisWindow WindowShade off
+ I ThisWindow Iconify off
+ I ThisWindow Raise
+ I ThisWindow (AcceptsFocus) FlipFocus

# Function: ToggleTitle
#
# This function will toggle if fvwm shows the TitleBar.
DestroyFunc ToggleTitle
AddToFunc   ToggleTitle
+ I ThisWindow (State 1) WindowStyle Title
+ I TestRc (Match) State 1 False
+ I TestRc (Match) Break
+ I WindowStyle !Title
+ I State 1 True

# Function: ChangeDesk
#
# This function is called by FvwmEvent every time the Desk is changed.
DestroyFunc ChangeDesk
AddToFunc   ChangeDesk
+ I SendToModule FvwmButtons ChangeButton desk0 Colorset 10
+ I SendToModule FvwmButtons ChangeButton desk1 Colorset 10
+ I SendToModule FvwmButtons ChangeButton desk2 Colorset 10
+ I SendToModule FvwmButtons ChangeButton desk3 Colorset 10
+ I SendToModule FvwmButtons ChangeButton desk$0 Colorset 11


#############
# 2: Styles #
#############

# Desktops and Pages
#
# Fvwm has both Virtual Desktops and Pages. Each Desktop is built from
# a grid of Pages. The following sets the name of four Desktops and then
# divides each Desktop into a 2x2 grid of Pages that are positioned as
#
#   +---+---+
#   |   |   |
#   +---+---+
#   |   |   |
#   +---+---+
#
DesktopName 0 I
DesktopName 0 II
DesktopName 0 III
DesktopName 0 IV

# EdgeScroll will move the view port between the Pages when the mouse
# moves to the edge of the screen. This set the amount of distance to
# scroll at 100% (full page) and the EdgeResistance which is a timer
# for how long the mouse as at the edge before it scrolls.
EdgeScroll 0 0 #  disabled (default 100 100)
EdgeResistance 450
EdgeThickness 2
Style * EdgeMoveDelay 350, EdgeMoveResistance 350

# EwmhBaseStruts [left] [right] [top] [bottom]
# Reserves space along the edge(s) of the Screen that will not
# be covered when maximizing or placing windows.
EwmhBaseStruts 0 0 0 35

# This sets the ClickTime and MoveThreshold used to determine
# Double Clicks, Hold and Move for the mouse.
ClickTime 250
MoveThreshold 3

# global styles
DefaultFont "xft:PragmataPro:Bold:size=9:antialias=True"
Style * ClickToFocus, MouseFocusClickRaises  # mouse click focuses windows
Style * MinOverlapPlacement, GrabFocusOff, !UsePPosition  # window placement
OpaqueMoveSize unlimited  # all windows OpaqueMove (vs wireframe)
Style * ResizeOpaque, SnapAttraction 5 SameType ScreenAll, SnapGrid  # windows snap to each other and screen edge
Style * DecorateTransient, StackTransientParent  # transient windows
Style * !FPGrabFocusTransient, FPReleaseFocusTransient
Style * WindowShadeScrolls, WindowShadeSteps 20  #  window shade
IgnoreModifiers L25  # ignore numlock (for bindings)
Style * BorderWidth 5, HandleWidth 5, MWMButtons, FvwmBorder, FirmBorder  # decor styles
Style * Colorset 1, HilightColorset 2
Style * BorderColorset 3, HilightBorderColorset 4
Style * !Icon  # disable weird icons on desktop
SetAnimation  10  -.01 0 .01 .03 .08 .18 .3 .45 .6 .75 .85 .90 .94 .97 .99 1.0

# window specific styles
Style ConfirmQuit !Title, PositionPlacement Center, WindowListSkip, Layer 6
Style FvwmIdent WindowListSkip
Style Steam HandleWidth 0, !Title
Style valheim.x86_64 HandleWidth 0, !Title
Style brave-browser !Title
Style feh !Title, PositionPlacement Center, NoPPosition, NoUSPosition

#######
# 3: Colorsets
#
# Colorsets can be used to configure the color of the various
# parts of fvwm such as window decor, menus, modules, etc.
#
# Colorset Convention
#
#   0 - Default
#   1 - Inactive Windows
#   2 - Active Window
#   3 - Inactive Windows Borders
#   4 - Active Windows Borders
#   5 - Menu - Inactive Item
#   6 - Menu - Active Item
#   7 - Menu - Grayed Item
#   8 - Menu - Title
#   9 - Reserved
#  10+ Modules
#      10 - Module Default
#      11 - Module Hilight
#      12 - Module ActiveButton (Mouse Hover)
#      13 - FvwmPager Active Page
#      14 - FvwmIconMan Iconified Button
###########
Colorset 0  fg #ffffff, bg #003c3c, hi, sh, Plain, NoShape
Colorset 1 fg white, bg #999999
Colorset 2 fg white, bg #eda870
Colorset 3  fg #999999, bg #999999, hi #d7d7d7, sh #303030, Plain, NoShape
Colorset 4  fg black, bg #2d2d2d, hi #474747, sh #101010, Plain, NoShape
Colorset 5 fg #32302c, bg #999999, TiledPixmap taskbarbg.xpm
Colorset 6  fg #32302c, bg #cdc6b6, sh #32302c
Colorset 7  fg grey30, bg #ffffff, hi, sh, Plain, NoShape
Colorset 8  fg #ffffff, bg #003c3c, hi, sh, Plain, NoShape
Colorset 10 fg #ffffff, bg #003c3c, hi #aaaaaa, sh #999999, Plain, NoShape
Colorset 11 fg #ffffff, bg #1a6e99, hi #ffffff, sh #ffffff, Plain, NoShape
Colorset 12 fg #2d2d2d, bg #ffffff, hi, sh, Plain, NoShape
Colorset 13 fg white, bg #999999
Colorset 14 fg white, bg #8998aa
Colorset 15 fg white, bg #686f82, TiledPixmap down.xpm, hi #92998b, sh #343433

#############
# MenuStyles
#############
MenuStyle * PopupDelayed, PopupDelay 200, PopdownImmediately
MenuStyle * PopupOffset -5 100, TitleWarpOff
MenuStyle * TitleUnderlines2, SeparatorsLong, TrianglesSolid
MenuStyle * AnimationOff, AutomaticHotkeysOff
MenuStyle * BorderWidth 2
MenuStyle * PopupAsSubmenu, HoldSubmenus, SubmenusRight
MenuStyle * ItemFormat "%|%5.5i%1.3l%2.3>%|"
MenuStyle * VerticalItemSpacing 1 1, VerticalTitleSpacing 2 2
MenuStyle * MenuColorset 7
MenuStyle * ActiveFore, Hilight3DOff
MenuStyle * ActiveColorset 8
MenuStyle * Font "Shadow=2:xft:Sans:Bold:size=11:antialias=True"

# Root Menu
#
# The root menu will PopUp with a click in the root
# window or using alt-f1 (or menu).
DestroyMenu MenuFvwmRoot
AddToMenu   MenuFvwmRoot
+ "&Programs%icons/programs.png%" Popup MenuPrograms
+ "XDG &Menu%icons/apps.png%" Popup XDGMenu
+ "&Alacritty%icons/terminal.png%" Exec exec $[infostore.terminal]
+ "" Nop
+ "Fvwm&Console%icons/terminal.png%" Module FvwmConsole -terminal $[infostore.terminal]
+ "&Wallpapers%icons/wallpaper.png%" Popup BGMenu
+ "" Nop
+ "Re&fresh%icons/refresh.png%" Refresh
+ "&Restart%icons/restart.png%" Restart
+ "&Quit%icons/quit.png%" Module FvwmScript FvwmScript-ConfirmQuit

# Generate XDGMenu
PipeRead "fvwm-menu-desktop -e"

# Programs Menu
#
# This test for some common programs and adds them to the menu.
# When adding programs you don't need to use the Test (x foo)
# lines as this is only to help make this menu portable.
DestroyMenu MenuPrograms
AddToMenu   MenuPrograms "Programs" Title
Test (x alacritty) + "Alacritty" Exec exec alacritty
Test (x brave) + "Brave" Exec exec brave
Test (x emacs) + "Emacs" Exec exec emacs

# Background Menu
#
# Backgrounds are located in ~/.fvwm/images/background/
# Menu icons are located in ~/.fvwm/images/bgicons/
DestroyMenu BGMenu
AddToMenu   BGMenu "Wallpapers" Title
+ "Floral%$[fvwm_wallpaper]/848a81.png%" SetBG 848a81.png
+ "Circles%bgicons/bg2.png%" SetBG bg2.png
+ "Space%bgicons/bg3.png%" SetBG bg3.png

# Window Operations Menus
DestroyMenu MenuWindowOps
AddToMenu   MenuWindowOps
+ "Move"      Move
+ "Resize"    Resize
+ "Iconify"   Iconify
+ "Maximize"  Maximize
+ "Shade"     WindowShade
+ "Stick"     Stick
+ "" Nop
+ "Close"     Close
+ "More..."   Menu MenuWindowOpsLong This 0 0

DestroyMenu MenuWindowOpsLong
AddToMenu   MenuWindowOpsLong
+ "Move"                Move
+ "Resize"              Resize
+ "(De)Iconify"         Iconify
+ "(Un)Maximize"        Maximize
+ "(Un)Shade"           WindowShade
+ "(Un)Sticky"		Stick
+ "(No)TitleBar"	Pick (CirculateHit) ToggleTitle
+ "Send To"             Popup MenuSendTo
+ "" Nop
+ "Close"               Close
+ "Destroy"             Destroy
+ "" Nop
+ "Raise"		Raise
+ "Lower"		Lower
+ "" Nop
+ "StaysOnTop"          Pick (CirculateHit) Layer 0 6
+ "StaysPut"            Pick (CirculateHit) Layer 0 4
+ "StaysOnBottom"       Pick (CirculateHit) Layer 0 2
+ "" Nop
+ "Identify"            Module FvwmIdent

DestroyMenu MenuIconOps
AddToMenu   MenuIconOps
+ "(De)Iconify"         Iconify
+ "(Un)Maximize"        Maximize
+ "(Un)Shade"           WindowShade
+ "(Un)Sticky"		Stick
+ "(No)TitleBar"	Pick (CirculateHit) ToggleTitle
+ "Send To"             Popup MenuSendTo
+ "" Nop
+ "Close"               Close
+ "Destroy"             Destroy
+ "" Nop
+ "Raise"		Raise
+ "Lower"		Lower
+ "" Nop
+ "StaysOnTop"          Pick (CirculateHit) Layer 0 6
+ "StaysPut"            Pick (CirculateHit) Layer 0 4
+ "StaysOnBottom"       Pick (CirculateHit) Layer 0 2
+ "" Nop
+ "Identify"            Module FvwmIdent

DestroyMenu MenuSendTo
AddToMenu MenuSendTo
+ "Current" MoveToCurrent
+ "Page" PopUp MenuSendToPage
+ "Desk" PopUp MenuSendToDesk

DestroyMenu MenuSendToDesk
AddToMenu   MenuSendToDesk
+ "Desk 0"	MoveToDesk 0 0
+ "Desk 1"	MoveToDesk 0 1
+ "Desk 2"	MoveToDesk 0 2
+ "Desk 3"	MoveToDesk 0 3

DestroyMenu MenuSendToPage
AddToMenu   MenuSendToPage
+ "Page (0,0)"	MoveToPage 0 0
+ "Page (0,1)"	MoveToPage 0 1
+ "Page (1,0)"	MoveToPage 1 0
+ "Page (1,1)"	MoveToPage 1 1

#######
# 5: Mouse and Key bindings
#
# Contexts:
#     R = Root Window                 rrrrrrrrrrrrrrrrrrrrrr
#     W = Application Window          rIrrrr<---------^rrrrr
#     F = Frame Corners               rrrrrr[13TTTT642]rrrrr
#     S = Frame Sides                 rIrrrr[wwwwwwwww]rrrrr
#     T = Title Bar                   rrrrrr[wwwwwwwww]rrrrr
#     I = Icon                        rIrrrrv_________>rrrrr
#                                     rrrrrrrrrrrrrrrrrrrrrr
#
#     Numbers are buttons: [1 3 5 7 9  TTTTT  0 8 6 4 2]
#
# Modifiers: (A)ny, (C)ontrol, (S)hift, (M)eta, (N)othing
#
# Format: Key <X>  <Context> <Modifier> <Action>
#         Mouse <X> <Context> <Modifier> <Action>
####################

# Alt-F1 or Menu to load the root menu and Alt-Tab for a WindowList.
# Ctrl-F1/F2/F3/F4 will switch between the Virtual Desktops.
# Super_R (windows key) will launch a terminal.
#
# Silent supresses any errors (such as keyboards with no Menu key).
Silent Key F1 A M Menu MenuFvwmRoot
Silent Key Menu A A Menu MenuFvwmRoot
Silent Key Tab A M WindowList Root c c NoDeskSort, SelectOnRelease Meta_L
Silent Key F1 A C GotoDesk 0 0
Silent Key F2 A C GotoDesk 0 1
Silent Key F3 A C GotoDesk 0 2
Silent Key F4 A C GotoDesk 0 3
Silent Key Enter A 4 Exec alacritty  # super+R opens alacritty
Silent Key XF86AudioLowerVolume A A Exec amixer -D pulse set Master 5%-
Silent Key XF86AudioRaiseVolume A A Exec amixer -D pulse set Master 5%+
Silent Key XF86MonBrightnessDown A A Exec xbacklight -dec 5
Silent Key XF86MonBrightnessUp A A Exec xbacklight -inc 5

# Window Buttons: [1 3 5 7 9  TTTTT  0 8 6 4 2]
#   1 - Open the WindowOps menu.
#   2 - Close on single click, Destory on double click.
#   4 - Maximize (right/middle button will only maximize vertical/horizontal)
#   6 - Iconify (minimize)
Mouse 1 1 A Menu MenuWindowOps Delete
Mouse 1 2 A Close
Mouse 1 4 A Maximize 100 100
Mouse 2 4 A Maximize 0 100
Mouse 3 4 A Maximize 100 0
Mouse 1 6 A Iconify

#   TitleBar: Click to Raise, Move, Double Click to Maximize
#             Mouse Wheel Up/Down to WindowShade On/Off
#   Borders: Click to raise, Move to Resize
#   Root Window: Left Click - Main Menu
#                Right Click - WindowOps Menu
#                Middle Click - Window List Menu
#   Right click TitleBar/Borders for WindowOps Menu
Mouse 1	T    A RaiseMoveX Move Maximize
Mouse 1	FS   A RaiseMove Resize
Mouse 4	T    A WindowShade True
Mouse 5	T    A WindowShade False
Mouse 1	R    A Menu MenuFvwmRoot
Mouse 2	R    A WindowList
Mouse 3	R    A Menu MenuWindowOpsLong
Mouse 1	I    A RaiseMoveX Move "Iconify off"
Mouse 3	T    A Menu MenuWindowOps
Mouse 3 I    A Menu MenuIconOps

#######
# 6: Window Decor
#
# Buttons Locations: [1 3 5 7 9  TTTTT  0 8 6 4 2]
#
#   1 - WindowOps Menu
#   2 - Close
#   4 - Maximize
#   6 - Minimize
###########
TitleStyle Centered Height 18 -- Flat
ButtonStyle All ActiveUp Vector 5 15x15@4 15x85@3 85x85@3 85x15@3 \
                15x15@3 -- Flat
ButtonStyle All ToggledActiveUp Vector 5 15x15@4 15x85@3 85x85@3 \
                85x15@3 15x15@3 -- Flat
ButtonStyle All ActiveDown Vector 5 20x20@4 20x80@3 80x80@3 80x20@3 \
                20x20@3 -- Flat
ButtonStyle All ToggledActiveDown Vector 5 20x20@4 20x80@3 80x80@3 \
                80x20@3 20x20@3 -- Flat
ButtonStyle All ToggledInactive Vector 5 47x47@3 57x53@3 53x53@3 \
                53x47@3 47x47@3 -- Flat
ButtonStyle All Inactive Vector 5 47x47@3 57x53@3 53x53@3 53x47@3 \
                47x47@3 -- Flat
AddButtonStyle 1 Active Vector 5 45x45@3 55x45@3 55x55@3 45x55@3 45x45@3
AddButtonStyle 2 Active Vector 4 35x35@3 65x65@3 65x35@4 35x65@3
AddButtonStyle 4 Active Vector 8 30x70@3 30x30@3 70x30@3 70x70@3 30x70@3 \
                 30x50@4 50x50@3 50x70@3
AddButtonStyle 4 ToggledActiveUp Vector 8 30x70@3 30x30@3 70x30@3 70x70@3 \
                 30x70@3 50x30@4 50x50@3 70x50@3
AddButtonStyle 6 Active Vector 5 35x60@3 65x60@3 65x50@3 35x50@3 35x60@3
ButtonStyle All - Clear
ButtonStyle 1 - MwmDecorMenu
ButtonStyle 4 - MwmDecorMax
ButtonStyle 6 - MwmDecorMin

############
# 7: Modules
#############

# FvwmIdent
#
# FvwmIdent is a module that can be used to get the various info about
# a window. One use is getting the class/resource/name of a window.
DestroyModuleConfig FvwmIdent:*
*FvwmIdent: Colorset 10
*FvwmIdent: Font "xft:PragmataPro:size=10:antialias=True"

# FvwmScript
#
# FvwmScript is a module that allows one to write custom desktop
# widgets and various other tools. This config uses two FvwmScripts.
#   - DateTime - uses the output of "date" to display the date/time
#     on the RightPanel.
#   - Quit - This is a popup that asks for quit confirmation before
#     quitting fvwm.
DestroyModuleConfig FvwmScript:*
*FvwmScript: DefaultColorset 10


# FvwmEvent
#
# FvwmEvent is a module that can run an action or function
# on specific events. This instance changes which desk number
# is highlighted when the desk is changed.
DestroyModuleConfig EventNewDesk:*
*EventNewDesk: PassID
*EventNewDesk: new_desk ChangeDesk

# FvwmForm
#
# FvwmForm is a module that can be used to build a GUI
# form. Used with fvwm-menu-desktop-config.fpl.
# This sets the default colorsets.
*FvwmFormDefault: Colorset 10
*FvwmFormDefault: ItemColorset 13

#
AddToDecor TaskbarBorder
+ BorderStyle TiledPixmap taskbarbg.xpm -- HiddenHandles NoInset

#
#Style * MwmBorder
Style FvwmButtons BorderWidth 4
Style FvwmButtons BorderColorset 6
Style FvwmButtons FixedPosition, FixedSize
Style FvwmButtons NeverFocus
Style FvwmButtons Sticky, StaysOnBottom
Style FvwmButtons !Title, !Handles
Style FvwmButtons UseDecor TaskbarBorder
Style FvwmButtons WindowListSkip

DestroyModuleConfig FvwmIconMan: *
*FvwmIconMan: Action Mouse 0 A ret
*FvwmIconMan: Action Mouse 1 A sendcommand IconManClick
*FvwmIconMan: Action Mouse 3 A sendcommand "Menu MenuIconOps"
*FvwmIconMan: ButtonGeometry 1x25
*FvwmIconMan: DrawIcons always
*FvwmIconMan: FocusAndSelectButton down
*FvwmIconMan: FocusAndSelectColorset 15
*FvwmIconMan: FocusButton down
*FvwmIconMan: FocusColorset 15
*FvwmIconMan: Font 6x13
*FvwmIconMan: Format "%i"
*FvwmIconMan: IconAndSelectButton flat
*FvwmIconMan: IconAndSelectColorset 5
*FvwmIconMan: IconButton flat
*FvwmIconMan: IconColorset 5
*FvwmIconMan: ManagerGeometry 1x1
*FvwmIconMan: MaxButtonWidthByColumns 5
*FvwmIconMan: PlainButton flat
*FvwmIconMan: PlainColorset 5
*FvwmIconMan: SelectButton flat
*FvwmIconMan: SelectColorset 5
*FvwmIconMan: ShowTransient true
*FvwmIconMan: Sort id
*FvwmIconMan: Title ""
*FvwmIconMan: TitleButton flat

DestroyModuleConfig FvwmDeskChange: *
*FvwmDeskChange

DestroyModuleConfig FvwmButtons: *
*FvwmButtons: Colorset 5
*FvwmButtons: Columns 1590
*FvwmButtons: Rows 3
*FvwmButtons: BoxSize Smart
*FvwmButtons: Font 6x13
*FvwmButtons: Frame 0
*FvwmButtons: Geometry $[wa.width]x25+0-0
*FvwmButtons: Padding 2 2
*FvwmButtons: (25x1, Frame 2, Title ">", \
    Action (Mouse 1) Menu MenuFvwmRoot Root 0 o100-35p)
*FvwmButtons: (3x1)
*FvwmButtons: (25x1, Id desk0, Frame 2, Title "I", Colorset 5, \
    Action (Mouse 1) GotoDesk 0 0)
*FvwmButtons: (25x1, Id desk1, Frame 2, Title "II" , \
    Action (Mouse 1) GotoDesk 0 1)
*FvwmButtons: (25x1, Id desk2, Frame 2, Title "III", \
    Action (Mouse 1) GotoDesk 0 2)
*FvwmButtons: (25x1, Id desk3, Frame 2, Title "IV", \
    Action (Mouse 1) GotoDesk 0 3)
*FvwmButtons: (3x1)
*FvwmButtons: (1192x1, Colorset 5, Swallow FvwmIconMan)  # Colorset 5 sets the background
*FvwmButtons: (3x1)
*FvwmButtons: (150x1, Frame 1, Swallow FvwmPager)
*FvwmButtons: (3x1)
*FvwmButtons: (50x1, Id volume, Frame -1, Padding 2, Title (Side, Right) "", \
    Action (Mouse 2) ToggleVolumeMute, \
    Action (Mouse 4) SetVolume +1%, \
    Action (Mouse 5) SetVolume -1%)
*FvwmButtons: (3x1)
*FvwmButtons: (50x1, Id calender, Frame -1)

DestroyModuleConfig FvwmPager: *
*FvwmPager: Colorset * 13
*FvwmPager: Columns 1
*FvwmPager: Font none
*FvwmPager: HilightColorset * 14
*FvwmPager: SolidSeparators
*FvwmPager: UseSkipList
*FvwmPager: Window3DBorders
*FvwmPager: WindowColorsets 1 2

DestroyFunc ChangeDesk
AddToFunc ChangeDesk
+ I SendToModule FvwmButtons ChangeButton desk0 Colorset 5
+ I SendToModule FvwmButtons ChangeButton desk1 Colorset 5
+ I SendToModule FvwmButtons ChangeButton desk2 Colorset 5
+ I SendToModule FvwmButtons ChangeButton desk3 Colorset 5
+ I SendToModule FvwmButtons ChangeButton desk$0 Colorset 5

DestroyModuleConfig FvwmEvent: *
*FvwmEvent: PassID
*FvwmEvent: new_desk ChangeDesk

DestroyFunc UpdateStatus
AddToFunc UpdateStatus
+ I PipeRead 'TIME=$(date +"%H:%M"); \
echo "SendToModule FvwmButtons ChangeButton calender Title \\"$TIME\\""; \
DUMP=$(pacmd dump); \
SINK=$(echo "$DUMP" | sed -n "0,/^set-default-sink \\(.*\\)$/s//\\1/p"); \
MUTE=$(echo "$DUMP" | sed -n "0,/^set-sink-mute $SINK \\(.*\\)$/s//\\1/p"); \
VOLH=$(echo "$DUMP" | sed -n "0,/^set-sink-volume $SINK \\(0x.*\\)$/s//\\1/p"); \
VOLP=$((VOLH * 100 / 0x10000)); \
if [ "$MUTE" != "no" ] || [ $VOLP -eq 0 ]; then ICON="muted"; \
elif [ $VOLP -gt 66 ]; then ICON="high"; \
elif [ $VOLP -gt 33 ]; then ICON="medium"; \
else ICON="low"; fi; \
echo "SendToModule FvwmButtons ChangeButton volume \
Title \\"$VOLP%\\", Icon \\"16x16/status/audio-volume-$ICON.png\\""'

Schedule Periodic 5000 UpdateStatus
